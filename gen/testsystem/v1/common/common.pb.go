// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: testsystem/v1/common/common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for test result statuses
type TestStatus int32

const (
	TestStatus_UNKNOWN TestStatus = 0
	TestStatus_PASSED  TestStatus = 1
	TestStatus_FAILED  TestStatus = 2
	TestStatus_SKIPPED TestStatus = 3
	TestStatus_BROKEN  TestStatus = 4
)

// Enum value maps for TestStatus.
var (
	TestStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "PASSED",
		2: "FAILED",
		3: "SKIPPED",
		4: "BROKEN",
	}
	TestStatus_value = map[string]int32{
		"UNKNOWN": 0,
		"PASSED":  1,
		"FAILED":  2,
		"SKIPPED": 3,
		"BROKEN":  4,
	}
)

func (x TestStatus) Enum() *TestStatus {
	p := new(TestStatus)
	*p = x
	return p
}

func (x TestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_testsystem_v1_common_common_proto_enumTypes[0].Descriptor()
}

func (TestStatus) Type() protoreflect.EnumType {
	return &file_testsystem_v1_common_common_proto_enumTypes[0]
}

func (x TestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestStatus.Descriptor instead.
func (TestStatus) EnumDescriptor() ([]byte, []int) {
	return file_testsystem_v1_common_common_proto_rawDescGZIP(), []int{0}
}

// Message for attachments
type Attachment struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	MimeType string                 `protobuf:"bytes,2,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*Attachment_Content
	//	*Attachment_Uri
	Payload       isAttachment_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_testsystem_v1_common_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_testsystem_v1_common_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_testsystem_v1_common_common_proto_rawDescGZIP(), []int{0}
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Attachment) GetPayload() isAttachment_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *Attachment) GetContent() []byte {
	if x != nil {
		if x, ok := x.Payload.(*Attachment_Content); ok {
			return x.Content
		}
	}
	return nil
}

func (x *Attachment) GetUri() string {
	if x != nil {
		if x, ok := x.Payload.(*Attachment_Uri); ok {
			return x.Uri
		}
	}
	return ""
}

type isAttachment_Payload interface {
	isAttachment_Payload()
}

type Attachment_Content struct {
	Content []byte `protobuf:"bytes,3,opt,name=content,proto3,oneof"` // inline payload (small artefacts)
}

type Attachment_Uri struct {
	Uri string `protobuf:"bytes,4,opt,name=uri,proto3,oneof"` // e.g. presigned S3 / GCS link for large artefacts
}

func (*Attachment_Content) isAttachment_Payload() {}

func (*Attachment_Uri) isAttachment_Payload() {}

var File_testsystem_v1_common_common_proto protoreflect.FileDescriptor

const file_testsystem_v1_common_common_proto_rawDesc = "" +
	"\n" +
	"!testsystem/v1/common/common.proto\x12\x14testsystem.v1.common\"x\n" +
	"\n" +
	"Attachment\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tmime_type\x18\x02 \x01(\tR\bmimeType\x12\x1a\n" +
	"\acontent\x18\x03 \x01(\fH\x00R\acontent\x12\x12\n" +
	"\x03uri\x18\x04 \x01(\tH\x00R\x03uriB\t\n" +
	"\apayload*J\n" +
	"\n" +
	"TestStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06PASSED\x10\x01\x12\n" +
	"\n" +
	"\x06FAILED\x10\x02\x12\v\n" +
	"\aSKIPPED\x10\x03\x12\n" +
	"\n" +
	"\x06BROKEN\x10\x04B`\n" +
	"%com.stanterprise.testsystem.v1.commonP\x01Z5github.com/stanterprise/proto-go/testsystem/v1/commonb\x06proto3"

var (
	file_testsystem_v1_common_common_proto_rawDescOnce sync.Once
	file_testsystem_v1_common_common_proto_rawDescData []byte
)

func file_testsystem_v1_common_common_proto_rawDescGZIP() []byte {
	file_testsystem_v1_common_common_proto_rawDescOnce.Do(func() {
		file_testsystem_v1_common_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_testsystem_v1_common_common_proto_rawDesc), len(file_testsystem_v1_common_common_proto_rawDesc)))
	})
	return file_testsystem_v1_common_common_proto_rawDescData
}

var file_testsystem_v1_common_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_testsystem_v1_common_common_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_testsystem_v1_common_common_proto_goTypes = []any{
	(TestStatus)(0),    // 0: testsystem.v1.common.TestStatus
	(*Attachment)(nil), // 1: testsystem.v1.common.Attachment
}
var file_testsystem_v1_common_common_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_testsystem_v1_common_common_proto_init() }
func file_testsystem_v1_common_common_proto_init() {
	if File_testsystem_v1_common_common_proto != nil {
		return
	}
	file_testsystem_v1_common_common_proto_msgTypes[0].OneofWrappers = []any{
		(*Attachment_Content)(nil),
		(*Attachment_Uri)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_testsystem_v1_common_common_proto_rawDesc), len(file_testsystem_v1_common_common_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testsystem_v1_common_common_proto_goTypes,
		DependencyIndexes: file_testsystem_v1_common_common_proto_depIdxs,
		EnumInfos:         file_testsystem_v1_common_common_proto_enumTypes,
		MessageInfos:      file_testsystem_v1_common_common_proto_msgTypes,
	}.Build()
	File_testsystem_v1_common_common_proto = out.File
	file_testsystem_v1_common_common_proto_goTypes = nil
	file_testsystem_v1_common_common_proto_depIdxs = nil
}
